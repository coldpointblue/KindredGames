{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red155\green35\blue147;\red255\green255\blue255;
\red0\green0\blue0;\red196\green26\blue22;\red28\green0\blue207;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c100000\c100000\c100000;
\csgenericrgb\c0\c0\c0\c85000;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c11000\c0\c81000;}
\margl1440\margr1440\vieww34060\viewh20160\viewkind0
\deftab560
\pard\pardeftab560\partightenfactor0

\f0\b\fs36 \cf2 Kindred \'97 Hugo Diaz \'97 Friday, September 9th, 2022.\
\pard\pardeftab560\partightenfactor0

\f1\b0 \cf2 \
This README file describes the REQUIREMENTS, SOLUTION and STRATEGY\'85  It details the project GOALS first.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab560\pardirnatural\partightenfactor0
\cf2 Project purpose \'97 To display a list with game names and their images from a JSON file fetched from the network.\
\
Opinion:\
\pard\pardeftab560\partightenfactor0
\cf2 The list should show images with rotating progress view as they load, together with their title.\
A number should be included because there are thousands of games.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab560\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\partightenfactor0

\f0\b \cf2 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab560\pardirnatural\partightenfactor0

\f1\b0 \cf2 GOAL:\
To show the cover images for Kindred games, with images and titles.\
\pard\pardeftab560\partightenfactor0

\f0\b \cf2 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab560\pardirnatural\partightenfactor0

\f1\b0 \cf2 Relevant information to CONSIDER, regarding the app USER\'85\
	\'85Questions: Who are the users?  What is their motivation?  What do they need to see or do?\
\
My interpretation \'97 A player who looks at this LIST is trying to choose a game.\
\
	See GAME NAMES for the games in case they already know what they are looking for.  Perhaps sort them.\
	See COVER IMAGES because it makes it interesting to explore, plus allows easy identification and memorization a favorite to recommend to others.\
\
If I had MORE TIME I would\'85\
\
	SORT the list to make it easier to find what a player is looking for \'97 or perhaps put some other SORT ORDER if it is Business Relevant.\
	Add a SORT arrows icon to reverse the sort order.\
	FILTER the list with a SEARCH text field.  Narrowing down the titles to those that match some of the filter text.\
	Give more DETAILS via a new Navigation screen with the image, title and other relevant and interesting information to entice them to play.\
	Offer a quick ONBOARDING 3 screens the first time the app launches to describe what it's for.\
	CACHE some of the images for faster loading of the list and less use of the web.\
	SHARE ICON to copy a link and send to friends.\
	FAVORITE ICON to keep track of preferred games and narrow down the list at one click.\
	Add an area where players can KEEP TRACK of their HIGH-SCORES or other ACHIEVEMENTS, such as SCREENSHOTS.\
		\'95 They might show these off in streams or social media.\
		\'95 They could track TRENDS over time.\
		\'95 They can JOIN others when another game becomes popular or show-off what they have been playing before, when in conversation with friends In Real Life.\
	Add a LEGAL disclosure to ensure we are not exposed on the legal front by people misusing the entertainment we offer.\
	Add something with the finance side of things \'97\'a0maybe keep track of a spending limit they have regarding games they play with us.\
		\'95 Currency being used in-games.\
		\'95 REGION they are playing in.\
	Add PREFERENCES for LANGUAGE being used in the app and other personal choices.\
	EXCHANGE information with FRIENDS or INVITE them to play at the same time, synchronized.\
		\'95 FRIENDS LIST.\
	RELOAD the list of games and their images at the press of a button.\
	LAST GAME PLAYED mentioned at the bottom on the List Screen, so they can easily play again when they return to us.\
	Add an option to LET A FRIEND PLAY on their device \'97\'a0keep track of the other person's score for later reference, in social conversation In Real Life.\
	Add a HIGH-SCORE area for personal satisfaction and perhaps comparison with other players in their Local Region.\
	SYNC to other devices they own.\
	FEEDBACK\'85  Encouraging NEW INNOVATIVE USES they come-up with on their own.\
			\'85Gather other GROUPS' or INDIVIDUALS' data.\
				\'85cherry-picking with known friends or colleagues, or gathering from larger community. \
		\'85to ALLOW & HELP *US* evaluate app data anonymously, gathered from all users, improving future VERSION'S insights at scale.\
			\'85At scale, a user might also find it useful to\'85\
				\'85share info, save it, compare it with others, import + export and other social constructs.\
					\'85Know when, where, why and how.\
\
\'85are EXAMPLES of what CAN be the PURPOSE of the APP, depending on REASONS that in THEIR HANDS it's VALUABLE to our players.\
\pard\pardeftab560\partightenfactor0

\f0\b \cf2 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
\pard\pardeftab560\partightenfactor0
\cf0 \'97\'97\'97\'97\'97\'97\'97\'97  REQUIREMENTS  \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Code test info \'97 Kindred\'85\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\pard\pardeftab560\partightenfactor0

\f1\b0 \cf2 See PDF with specifics.\
Build app to see list of game titles and images using Swift and only Apple Frameworks.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural\partightenfactor0
\cf2 Use JSON\'85	https://api.unibet.com/game-library-rest-api/getGamesByMarketAndDevice.json\
\
\pard\pardeftab560\partightenfactor0

\f0\b \cf2 \'97\'97\'97\'97\'97\'97\'97\'97  \'97\'97\'97\'97\'97\'97\'97\'97  
\f1\b0 \

\f0\b \
\'97\'97\'97\'97\'97\'97\'97\'97      
\f1\b0 STRATEGY        
\f0\b \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97
\f1\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab560\pardirnatural\partightenfactor0
\cf2 \'95 Take notes first, about the problem, to remind yourself of details and communicate relevant parts to others.\
\'95 Use a scalable project architecture that separates tasks, views and core models.\
\pard\pardeftab560\partightenfactor0
\cf2 \
WHAT to do\'85  THINK!\
\'95 Read the problem.\
\'95 Analyze the problem, thinking about who it's for and what THEY might do with it that can make it USEFUL.  Brainstorm.\
	Load the data from the web\'85\
		It brings GAME COVERS with images and titles for each piece of data.\
\'95 What does the app need to actually communicate, enable or show on-screen to be useful?\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab560\pardirnatural\partightenfactor0
\cf2 	\'85DESIGN a UI that is attractive and simple for the user to enjoy seeing these game covers and can remember what they see.\
\pard\pardeftab560\partightenfactor0
\cf2 		Separate data into game cover items.\
\
DEFINE & FILTER DOWN TO ESSENTIALS for the start with the short-term, proof-of-concept goals\'85\
	[see USE CASE further BELOW as a guide]\
\'95 Imagine what you need to make a proof-of-concept for this exercise\'85  Reasons for what data, which processes, UI, etc.\
\
HOW to code it\'85\
\'95 View the JSON data and determine its format.  Use a tool such as QuickType\'85 ( https://app.quicktype.io/#l=swift )\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab560\pardirnatural\partightenfactor0
\cf2 \'95 Code a MODEL for individual data gathered when a web json file is fetched.  Ensure it's valid and it works.\
\'95 Code a mechanism to FETCH the JSON data file from the address.\
\'95 Figure out a UI to present the data with the pieces a player sees in a useful manner, which must make sense to them.\
	[see USE CASE further BELOW as a guide]\
\'95 Code the needed pieces to take the data into the UI. \
\
Thoughts\'85\
\'95 Future code tests should be simple to add and able to easily change in the future.\
\'95 Use a Constants file for keeping needed changes in UI  & other useful information, simple during prototyping.\
\pard\pardeftab560\partightenfactor0

\f0\b \cf2 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\'97\'97
\f1\b0 \

\f0\b 	USE-CASE\'85\
\'97\'97 User wants to see 
\f1\b0 game covers listed to choose a game to play or have more info about.
\f0\b \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural\partightenfactor0

\f1\b0 \cf0 User LAUNCHES the app.\
Sees LIST with \cf2 game's\cf0  NAMES & IMAGES.\
BANNER at top shows welcome message.\
Touches ITEM to SELECT that game from the view to see its DETAILS\'85\
	POPUP shows details\'85\
		Top: 			NAME.\
		Center:		IMAGE.\
		Bottom:		HIGHLIGHTS.\
		Navigating BACK dismisses the details screen.\
User QUITS.\
\pard\pardeftab560\partightenfactor0

\f0\b \cf2 \'97\'97\
\'97\'97
\f1\b0 \

\f0\b \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab560\pardirnatural\partightenfactor0

\f1\b0 \cf2 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab560\pardirnatural\partightenfactor0

\f0\b \cf2 \'97\'97\'97 
\f1\b0 CODE REVIEW & BEST PRACTICES\'85 REMINDER 
\f0\b \'97\'97\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab560\pardirnatural\partightenfactor0
\cf0 Architecture\'85
\f1\b0 \cf2 \
User Interface handles interactions.\
Business Logic handles concepts & behavior of the app to match company needs.\
Data Access exposes data stored to business layer.\
\'85Higher layer can access any layer below it, but not vice versa.\
Make sure that the Directory Structure is being followed.\
Separate logic from action.\
All of the business logic of your application lives in the value layer, goes in View Model.\
GUI Views don't have any Data Objects.\
Single responsibility, different code for different tasks.\
Create separate classes (and files) to manage different kind of responsibilities to avoid AppDelegate overuse.\
\
\

\f0\b \cf0 Clarity\'85
\f1\b0 \cf2 \
Avoid ambiguous method names, be crystal clear when naming things by ensuring name says what it does.\
Variable names (i.e. Booleans) should be interrogative.\
Namespace all constants by use, 'enum Xyz' with static let xyz, inside an 'enum Current'.\
Fonts, Colors, etc. should not be accessed at random, a separate file should handle them.\
Indentations should be consistent, code easy to read.\
Keep It Simple Stupid.\
If any Complex Logic is involved, check there is a Comment Explaining it.\
Prefer using High Order Functions where returns or arguments can be functions, closures.\
Check if any API provided by Apple can make things simpler.\
Don\'92t Repeat Yourself.\
Avoid disabling unused code, if you don\'92t need it now, remove it.\
Improve any bad code if you can.\
Ensure Guidelines set by the team are followed, Lint check common use (SwiftLint).\
\
\

\f0\b \cf0 Understandable, clean code\'85
\f1\b0 \cf2 \
Prefer enum, switch over if else.\
Check if any hard-coded checks (maybe strings) can be changed to enum.\
Use Nested Types clearly, like putting enum inside your Class, to avoid putting them in global scope.\
Avoid nested structures (loops, if/else).\
Use variadic parameters, so multiple values are allowed. i.e. "parameter_here..."\
Conformance to Protocols should be in Extensions.\
Avoid Type Inference.\
Avoid overusing reference types \'97 only use reference types for live objects.\
Design to inject dependencies manually and ensure that Dependencies are injected manually.\
Prevent dependency injection by avoiding overuse of any default parameters.\
Make sure there are no Retain Cycles, in order to deallocate as intended.\
Never(?) use implicitly unwrapped properties.\
Make sure there are no Force Unwraps.\
Only use '_' when needed, in unused return or ignored in completion blocks.\
Classes should be final by default.\
\
\

\f0\b \cf0 Security\'85
\f1\b0 \cf2 \
Disable auto-correct for sensitive keyboard input with autocorrectionType property set to UITextAutocorrectionTypeNo.\
Each and every text input must be checked for bad characters and escape sequences.\
Use NSSecureCoding in place of NSCoding to avoid outside data hacking.\
Use isExcludedFromBackupKey to avoid iCloud getting sensitive data.\
\
\

\f0\b \cf0 QA\'85
\f1\b0 \cf2 \
Verify the main functionality of the app works.\
Navigate the most common workflow.\
Ensure Bug fixes perform adequately.\
Ensure no import of unnecessary modules.\
Check if any deprecated API is being used.\
Check if there are unintended changes in the Public Release.\
Avoid extensive logging.  Just use error.\
Error check corner cases (i.e. Error Handling as in backend fails should show an Error Message).\
Ensure Code Coverage of all new code, when code changes a corresponding unit test exists for every case within its module.\
\
\

\f0\b \cf0 Unit Tests\'85
\f1\b0 \cf2 \
Given x\'85 When y\'85 Then\'85 z\
Use consistent naming conventions.\
It\'92s better to test as you commit code changes to avoid errors.\
All the bugs found must be fixed before moving to the next phase.\
Group related unit tests together in their own suite.\
Only test what is needed and verify that it works as expected.\
Focus more on the tests that affect the behavior of the system.\
Test individual pieces of code, one at a time.\
Test your model in isolation, test cannot be using UIKit.\
Set up unit tests for views and unit tests for controllers.\
Write tests for all of the edge cases.\
Test boundary conditions if any possibility exists for Index Out of Bounds Exception (i.e. Accessing values from an Array).\
Test app\'92s model and async functionality.\
Write unit tests for asynchronous code.\
\
\

\f0\b \cf0 Team Revision\'85
\f1\b0 \cf2 \
Make the Quality Assurance approval MANDATORY\'85\
A Merge Check ensures good implementation for merging without bugs.\
Developer Approval ensures code quality.\
Quality Assurance Approval ensures no bugs exist.\
\pard\pardeftab560\partightenfactor0

\f0\b \cf2 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Add \'93SwiftLint\'94 as \'93Run Script SwiftLint\'94, in \'93Build Phases\'94, after \'93Compile Sources\'94\'85\
\pard\tx840\pardeftab840\pardirnatural\partightenfactor0

\f2\b0\fs34 \cf3 \cb4 export\cf5  PATH=\cf6 "\cf5 $PATH\cf6 :/opt/homebrew/bin"\cf5 \
\cf3 if\cf5  which swiftlint > /dev/null; \cf3 then\cf5 \
    swiftlint lint --fix --format && swiftlint\
\cf3 else\cf5 \
  \cf3 echo\cf5  \cf6 "warning: SwiftLint not installed, download from https://github.com/realm/SwiftLint\\n note:       \'85or if you have brew, install using\'85\\n note:      brew install swiftlint"\cf5 \
  \cf3 exit\cf5  \cf7 1\cf5 \
\cf3 fi\cf5 \
\
\pard\pardeftab560\partightenfactor0

\f1\fs36 \cf2 \cb1 Helper tools for using Mock Data\'85\
\
\pard\pardeftab560\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://app.quicktype.io/#l=swift"}}{\fldrslt \cf2 https://app.quicktype.io/#l=swift}} \'85 JSON schema in Swift from pasted JSON.\
\pard\pardeftab560\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://jsonformatter.curiousconcept.com/"}}{\fldrslt \cf2 https://jsonformatter.curiousconcept.com/}} \'85 Readable JSON from pasted raw JSON.\
\pard\pardeftab560\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://designer.mocky.io/design"}}{\fldrslt \cf2 https://designer.mocky.io/design}} \'85 Network request data.\
\pard\pardeftab560\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://beta5.objgen.com/json/local/design"}}{\fldrslt \cf2 https://beta5.objgen.com/json/local/design}} \'85 Design JSON format from written text.\
}